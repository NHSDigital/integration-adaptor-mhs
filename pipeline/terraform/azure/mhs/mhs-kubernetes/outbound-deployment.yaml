apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: outbound
  name: outbound
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: outbound
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: outbound
    spec:
      containers:
      - env:
        - name: MHS_FORWARD_RELIABLE_ENDPOINT_URL
          value: https://192.168.128.11/reliablemessaging/forwardreliable
        - name: MHS_LOG_LEVEL
          value: DEBUG
        - name: MHS_OUTBOUND_HTTP_PROXY
          value: "NotSet"
        - name: MHS_OUTBOUND_VALIDATE_CERTIFICATE
          value: "False"
        - name: MHS_RESYNC_INITIAL_DELAY
          value: "0.15"
        - name: MHS_RESYNC_INTERVAL
          value: "1"
        - name: MHS_RESYNC_RETRIES
          value: "20"
        - name: MHS_SPINE_ORG_CODE
          value: "YES"
        - name: MHS_SPINE_REQUEST_MAX_SIZE
          value: "4999600"
        - name: MHS_SPINE_ROUTE_LOOKUP_URL
          value: "route:8080"
        - name: MHS_DB_ENDPOINT_URL
          value: "add from secrets"
        - name: MHS_PERSISTENCE_ADAPTOR
          value: mongodb
        - name: MHS_STATE_TABLE_NAME
          value: mhs_state
        - name: MHS_SYNC_ASYNC_STATE_TABLE_NAME
          value: sync_async_state
        - name: MHS_SECRET_SPINE_ROUTE_LOOKUP_CA_CERTS
          value: "Here goes spine CA certs"
        - name: MHS_SECRET_PARTY_KEY
          value: party_key
        - name: MHS_SECRET_CLIENT_CERT
          value: "Here goes client cert"
        - name: MHS_SECRET_CLIENT_KEY	
          value: "Here goes client cert key"
        - name: MHS_SECRET_CA_CERTS
          value: "Here goes list of CA certs"

        image: nhsdev/nia-mhs-outbound:1.0.0
        imagePullPolicy: ""
        name: outbound
        ports:
        - containerPort: 80
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}

